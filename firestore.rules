
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }
    
    function getLobby() {
      return get(/databases/$(database)/documents/lobbies/$(lobbyId)).data;
    }
    
    function isHost(uid) {
        return uid == getLobby().hostId;
    }

    function isPlayer(uid) {
        return uid in getLobby().players.map(p => p.uid);
    }

    match /lobbies/{lobbyId} {
      allow read: if true;
      
      allow create: if isSignedIn();
      
      allow update: if isSignedIn() && (isHost(request.auth.uid) || isPlayer(request.auth.uid));

      allow delete: if isSignedIn() && isHost(request.auth.uid);

      match /players/{playerId} {
        allow read: if true;
        allow create, update, delete: if isUser(playerId) || isHost(request.auth.uid);
      }
    }
  }
}
