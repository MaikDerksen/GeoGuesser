rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Lobbies:
    // - Anyone authenticated can create a lobby.
    // - Anyone authenticated can read a lobby.
    // - Only the host can start the game (update status to 'playing').
    // - Players can join (add to players array) or leave (remove from players array).
    // - Only the host can delete the lobby.
    match /lobbies/{lobbyId} {
      allow read: if request.auth != null;

      allow create: if request.auth != null
                    && request.resource.data.hostId == request.auth.uid
                    && request.resource.data.status == 'waiting'
                    && request.resource.data.players[0].uid == request.auth.uid;

      allow update: if request.auth != null && (
        // Host can start the game or change game settings
        (resource.data.hostId == request.auth.uid && (
          request.resource.data.status == 'playing' ||
          request.resource.data.gameMode != resource.data.gameMode
        )) ||
        // Player can join a waiting lobby
        (
          !exists(resource.data.players.path + '/' + request.auth.uid) &&
          request.resource.data.players.size() == resource.data.players.size() + 1 &&
          resource.data.status == 'waiting'
        ) ||
        // Player can leave a lobby
        (
          exists(resource.data.players.path + '/' + request.auth.uid) &&
          request.resource.data.players.size() == resource.data.players.size() - 1
        ) ||
        // Player can update their own guess/score
        (
            request.resource.data.players.size() == resource.data.players.size() &&
            request.auth.uid in request.resource.data.players.map(p => p.uid)
        )
      );

      allow delete: if request.auth != null && resource.data.hostId == request.auth.uid;
    }
  }
}
